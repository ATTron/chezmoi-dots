---
- name: Setup Development Environment
  hosts: localhost
  gather_facts: yes
  become: yes
  become_method: sudo
  vars:
    # username: "{{ lookup('env', 'SUDO_USER') | default('vscode') }}"
    username: >-
      {{ (lookup('env', 'SUDO_USER') | default('')) 
         or (lookup('env', 'USER') | default('')) 
         or 'vscode' }}
    home_dir: "/home/{{ username }}"
    go_version: "1.24.2"

  tasks:
    # -- SYSTEM SETUP (root) --

    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Install system packages
      apt:
        name:
          - zsh
          - python3
          - python3-venv
          - pkg-config
          - fd-find
          - wget
          - curl
          - git
          - lsb-release
          - software-properties-common
          - gnupg
        state: present

    - name: Download Go
      get_url:
        url: "https://go.dev/dl/go{{ go_version }}.linux-amd64.tar.gz"
        dest: "/tmp/go{{ go_version }}.linux-amd64.tar.gz"
        mode: '0644'

    - name: Extract Go
      unarchive:
        src: "/tmp/go{{ go_version }}.linux-amd64.tar.gz"
        dest: /usr/local
        remote_src: yes

    - name: Create symlink for Go
      file:
        src: /usr/local/go/bin/go
        dest: /usr/local/bin/go
        state: link
        force: yes

    - name: Remove Go tarball
      file:
        path: "/tmp/go{{ go_version }}.linux-amd64.tar.gz"
        state: absent

    - name: Set zsh as default shell
      user:
        name: "{{ username }}"
        shell: /bin/zsh

    # -- USER SETUP (no root) --

    - name: Install Starship prompt
      become: no
      shell: curl -sS https://starship.rs/install.sh | sh -s -- -y
      args:
        creates: "{{ home_dir }}/.cargo/bin/starship"
        executable: /bin/bash

    - name: Install Zoxide
      become: no
      shell: curl -sSfL https://raw.githubusercontent.com/ajeetdsouza/zoxide/main/install.sh | sh
      args:
        creates: "{{ home_dir }}/.local/bin/zoxide"
        executable: /bin/bash

    - name: Install rustup
      become: no
      shell: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
      args:
        creates: "{{ home_dir }}/.cargo/bin/rustup"
        executable: /bin/bash

    - name: Install bob (Neovim version manager)
      become: no
      shell: |
        export PATH="$HOME/.cargo/bin:$PATH"
        cargo install --git https://github.com/MordechaiHadad/bob.git
      args:
        creates: "{{ home_dir }}/.cargo/bin/bob"
        executable: /bin/bash

    - name: Install just (makefile alternative)
      become: no
      shell: |
        export PATH="$HOME/.cargo/bin:$PATH"
        cargo install just
      args:
        creates: "{{ home_dir }}/.cargo/bin/just"
        executable: /bin/bash

    - name: Install Neovim nightly using bob
      become: no
      shell: |
        export PATH="$HOME/.cargo/bin:$PATH"
        bob use nightly || echo "failed to set nightly, but continuing"
      args:
        executable: /bin/bash
      ignore_errors: yes

    - name: Install NVM
      shell: |
        export NVM_DIR="{{ home_dir }}/.nvm"
        mkdir -p "$NVM_DIR"
        curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.2/install.sh | bash
      args:
        creates: "{{ home_dir }}/.nvm/nvm.sh"
        executable: /bin/bash
      become: no
      environment:
        HOME: "{{ home_dir }}"  # Correcting the HOME variable to the user's home dir

    - name: Install Node.js using NVM
      shell: |
        export NVM_DIR="{{ home_dir }}/.nvm"
        [ -s "$NVM_DIR/nvm.sh" ] && source "$NVM_DIR/nvm.sh"
        nvm install 22
        nvm use 22
      args:
        executable: /bin/bash
      become: no
      environment:
        HOME: "{{ home_dir }}"  # Correcting the HOME variable to the user's home dir

    - name: Install uv package manager
      become: no
      shell: curl -LsSf https://astral.sh/uv/install.sh | sh
      args:
        creates: "{{ home_dir }}/.local/bin/uv"
        executable: /bin/bash

    - name: Install fzf
      become: no
      git:
        repo: https://github.com/junegunn/fzf.git
        dest: "{{ home_dir }}/.fzf"
        depth: 1

    - name: Run fzf installer
      become: no
      shell: "{{ home_dir }}/.fzf/install --all"
      args:
        creates: "{{ home_dir }}/.fzf/bin/fzf"
        executable: /bin/bash

    - name: Download LLVM installation script
      get_url:
        url: https://apt.llvm.org/llvm.sh
        dest: /tmp/llvm.sh
        mode: '0755'

    - name: Execute LLVM installation script
      command: /tmp/llvm.sh 19
      become: yes
      args:
        creates: /usr/bin/clang-19

    - name: Verify Clang 19 installation
      command: clang-19 --version
      register: clang_version
      changed_when: false

    - name: Create symlink for current clang version
      file:
        src: "/usr/bin/clang-19"
        dest: "/usr/bin/clang"
        state: link
        force: yes


    - name: Display Clang version
      debug:
        var: clang_version.stdout

    - name: Clean up installation script
      file:
        path: /tmp/llvm.sh
        state: absent

    - name: Create local bin directory
      file:
        path: "{{ ansible_env.HOME }}/.local/bin"
        state: directory
        mode: '0755'

    - name: Download zigup binary
      get_url:
        url: https://github.com/marler8997/zigup/releases/latest/download/zigup-linux-x86_64
        dest: "{{ ansible_env.HOME }}/.local/bin/zigup"
        mode: '0755'
      register: zigup_download

    - name: Verify zigup installation
      command: "{{ ansible_env.HOME }}/.local/bin/zigup version"
      register: zigup_version
      changed_when: false

    - name: Display zigup version
      debug:
        var: zigup_version.stdout

    - name: Install Zig master using zigup
      command: "{{ ansible_env.HOME }}/.local/bin/zigup master"
      register: zig_install
      changed_when: "'already installed' not in zig_install.stderr"

    - name: Add ~/.local/bin to PATH in .bashrc
      lineinfile:
        path: "{{ ansible_env.HOME }}/.bashrc"
        line: 'export PATH="$HOME/.local/bin:$PATH"'
        regexp: '^export PATH=.*\.local/bin.*'
        create: yes

    - name: Add ~/.local/zig to PATH in .bashrc
      lineinfile:
        path: "{{ ansible_env.HOME }}/.bashrc"
        line: 'export PATH="$HOME/.local/zig:$PATH"'
        regexp: '^export PATH=.*\.local/zig.*'
        create: yes

    - name: Create symlink for current zig version
      file:
        src: "{{ ansible_env.HOME }}/.local/zig"
        dest: "{{ ansible_env.HOME }}/.local/bin/zig"
        state: link
        force: yes

    - name: Verify Zig installation
      shell: |
        export PATH="{{ ansible_env.HOME }}/.local/bin:{{ ansible_env.HOME }}/.local/zig:$PATH"
        zig version
      register: zig_version
      changed_when: false

    - name: Display Zig version
      debug:
        var: zig_version.stdout
